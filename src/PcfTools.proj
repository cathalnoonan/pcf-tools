<Project>

    <PropertyGroup>
        <Version Condition="'$(Version)'==''">0.0.0</Version>
        <NuGetPackageSource Condition="'$(NugetPackageSource)'==''">https://api.nuget.org/v3/index.json</NuGetPackageSource>
        <SwapDir>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)\swap'))</SwapDir>
    </PropertyGroup>

    <ItemGroup>
        <NuGetPackages Include="Cathal.PcfTools.MSBuild.Control" />
        <NuGetPackages Include="Cathal.PcfTools.MSBuild.Proj" />
        <NuGetPackages Include="Cathal.PcfTools.MSBuild.Solution" />
    </ItemGroup>

    <Target Name="Pack">
        <Message
            Text="Packing nuget packages..."
            Importance="high" />
        <Exec
            Command="dotnet pack %(NuGetPackages.Identity) --configuration Release --output &quot;$(MSBuildThisFileDirectory)../dist&quot; -p:Version=$(Version)" />
    </Target>

    <Target Name="Publish">
        <Message
            Text="Publishing nuget packages..."
            Importance="high" />
        <Exec
            Command="dotnet nuget push &quot;$(MSBuildThisFileDirectory)../dist/%(NuGetPackages.Identity).$(Version).nupkg&quot; --source $(NuGetPackageSource) --skip-duplicate --api-key $(NuGetApiKey)" />
    </Target>

    <Target Name="SetVersions">
        <Message
            Text="Setting version numbers"
            Importance="high" />
    </Target>
    <Target Name="SetVersions:Markdown" AfterTargets="SetVersions">
        <Message
            Text="  Setting version numbers in markdown files"
            Importance="high" />
        <ItemGroup>
            <Files
                Include="$(MSBuildProjectDirectory)\**\*.md" />
        </ItemGroup>
        <MakeDir
            Directories="$(SwapDir)"/>
        <Copy
            SourceFiles="@(Files)"
            DestinationFolder="$(SwapDir)\%(RecursiveDir)">
            <Output
                TaskParameter="CopiedFiles"
                ItemName="BackupCopiedFiles" />
        </Copy>
        <WriteLinesToFile
            File="%(Files.Identity)"
            Lines="$([System.IO.File]::ReadAllText('%(Files.Identity)').Replace('{{version_number}}','$(Version)'))"
            Overwrite="true"
            Encoding="UTF-8" />
        <RemoveDir
            Directories="$(SwapDir)" />
    </Target>

</Project>
